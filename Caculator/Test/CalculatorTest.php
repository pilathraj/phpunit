<?php
require '../Calculator.php';
/**
 * Generated by PHPUnit_SkeletonGenerator on 2017-07-06 at 12:17:39.
 */
class CalculatorTest extends PHPUnit_Framework_TestCase {

    /**
     * @var Calculator
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new Calculator;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

    /**
     * Generated from @assert (1, 0) == 1.
     *
     * @covers Calculator::sum
     */
    public function testSum() {
        $this->assertEquals(
                1, $this->object->sum(1, 0)
        );
    }

    /**
     * Generated from @assert (1, 1) == 2.
     *
     * @covers Calculator::sum
     */
    public function testSum2() {
        $this->assertEquals(
                2, $this->object->sum(1, 1)
        );
    }

    /**
     * Generated from @assert (0, 0) == 0.
     *
     * @covers Calculator::sum
     */
    public function testSum3() {
        $this->assertEquals(
                0, $this->object->sum(0, 0)
        );
    }

    /**
     * Generated from @assert (0, 1) == 1.
     *
     * @covers Calculator::sum
     */
    public function testSum4() {
        $this->assertEquals(
                1, $this->object->sum(0, 1)
        );
    }

    /**
     * Generated from @assert (5, 5) == 10.
     *
     * @covers Calculator::sum
     */
    public function testSum5() {
        $this->assertEquals(
                10, $this->object->sum(5, 5)
        );
    }

    /**
     * Generated from @assert (10, 5) == 5.
     *
     * @covers Calculator::sub
     */
    public function testSub() {
        $this->assertEquals(
                5, $this->object->sub(10, 5)
        );
    }

    /**
     * Generated from @assert (2, 2) == 0.
     *
     * @covers Calculator::sub
     */
    public function testSub2() {
        $this->assertEquals(
                0, $this->object->sub(2, 2)
        );
    }

    /**
     * Generated from @assert (1, 5) == -4.
     *
     * @covers Calculator::sub
     */
    public function testSub3() {
        $this->assertEquals(
                -4, $this->object->sub(1, 5)
        );
    }

}
